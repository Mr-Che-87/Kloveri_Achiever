workflow:
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_COMMIT_MESSAGE =~ /^Update build version*/
      when: never
    - if: $CI_COMMIT_BRANCH

stages:
  - vars
  - build
  - deploy
  - notification

default:
  artifacts:
    when: always
    paths:
     - $CI_PROJECT_DIR/package.json
    expire_in: 1 days
  tags:
    - docker

update_version:
  stage: vars
  script:
    - export OLD_VERSION=`grep version package.json | grep -Po [0-9.]*`
    - export NEW_VERSION=`echo $OLD_VERSION | awk '{split($NF,v,/[.]/); $NF=v[1]"."v[2]"."++v[3]}1'`
    - 'sed -i "s/\"version\": \"$OLD_VERSION\"/\"version\": \"$NEW_VERSION\"/g" package.json'
    - git clone --branch $CI_COMMIT_BRANCH $CI_REPOSITORY_URL git_project
    - cp package.json git_project/package.json
    - cd git_project && git add . && git commit -m "Update build version" 
    - git push https://repository_user_token:$repository_user_token@git.infra.cloveri.com/cloveri.start/achiever/front.git/

build_test_image:
  stage: build
  script:
    - docker build -t docker.infra.cloveri.com/$CI_PROJECT_PATH:t`grep version package.json | grep -Po [0-9.]*` .
    - docker login https://docker.infra.cloveri.com -u $CI_REGISTRY_USER --password-stdin <<<$CI_JOB_TOKEN
    - docker push docker.infra.cloveri.com/$CI_PROJECT_PATH:t`grep version package.json | grep -Po [0-9.]*`
  after_script:
    - docker rmi docker.infra.cloveri.com/$CI_PROJECT_PATH:t`grep version package.json | grep -Po [0-9.]*`
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'

build_prod_image:
  stage: build
  script:
    - docker build -t docker.infra.cloveri.com/$CI_PROJECT_PATH:latest .
    - docker image tag docker.infra.cloveri.com/$CI_PROJECT_PATH:latest docker.infra.cloveri.com/$CI_PROJECT_PATH:`grep version package.json | grep -Po [0-9.]*' package.json`
    - docker login https://docker.infra.cloveri.com -u $CI_REGISTRY_USER --password-stdin <<<$CI_JOB_TOKEN
    - docker push docker.infra.cloveri.com/$CI_PROJECT_PATH:latest
    - docker push docker.infra.cloveri.com/$CI_PROJECT_PATH:`grep version package.json | grep -Po [0-9.]*' package.json` .
  after_script:
    - docker rmi docker.infra.cloveri.com/$CI_PROJECT_PATH:latest
    - docker rmi docker.infra.cloveri.com/$CI_PROJECT_PATH:`grep version package.json | grep -Po [0-9.]*` .
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

deploy_in_test:
  stage: deploy
  script:
    - sed -i "s/PROJECT_IMAGE_NAME/$CI_PROJECT_NAME:t`grep version package.json | grep -Po [0-9.]*`/g" compose.yaml
    - docker login https://docker.infra.cloveri.com -u $CI_REGISTRY_USER --password-stdin <<<$CI_JOB_TOKEN
    - docker compose -p achiever_front down || true
    - docker rmi `docker images -q docker.infra.cloveri.com/$CI_PROJECT_PATH` || true
    - docker compose up -d
  after_script:
    - sleep 10
    - 'curl -X POST -s -H "Content-Type:multipart/form-data" -F message_thread_id=1491 -F chat_id=-1002069387923_1491 -F text="Project: $CI_PROJECT_TITLE. Commit in the $CI_COMMIT_BRANCH branch. Comment in the commit: $CI_COMMIT_MESSAGE. Author of commit: $GITLAB_USER_LOGIN. New version of the project: `grep version package.json | grep -Po [0-9.]*`. Status: $CI_JOB_STATUS. $CI_JOB_URL" "https://api.telegram.org/$POS_TOK:$PRE_TOK/sendMessage"'
    - docker compose -p achiever_front logs  || true
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
  tags: [achiever]
