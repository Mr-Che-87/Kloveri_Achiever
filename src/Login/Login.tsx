import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import styles from "./Login.module.scss";
import WelcomeImg from "@/assets/Welcome-img.png"



const Login: React.FC = () => {
  const [login, setLogin] = useState("");
  const [password, setPassword] = useState("");
  const [role, setRole] = useState<"admin" | "worker" | "">("");
  const [loginError, setLoginError] = useState("");
  const [passwordError, setPasswordError] = useState("");
  const [showPassword, setShowPassword] = useState(false);

  const navigate = useNavigate();

  const handleLogin = () => {
    if (role === "admin") {
      navigate("/admin");
    } else if (role === "worker") {
      navigate("/worker");
    }
  };

  const handleReset = () => {
    setLogin("");
    setPassword("");
    setRole("");
    setLoginError("");
    setPasswordError("");
  };

  const validateEmail = (email: string) => {
    //–≤–∞–ª–∏–¥–∞—Ü–∏—è –µ–º–µ–π–ª–∞ —Ç–∏–ø–∞ string@string.string –∏ —Ç–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω–∏—Ü–∞: 
    const re = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/; 
    return re.test(String(email).toLowerCase());
  };

 
  const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setLogin(e.target.value);
  };

  const handleEmailBlur = () => {
    if (!validateEmail(login)) {
      setLoginError("–ê–¥—Ä–µ—Å –ø–æ—á—Ç—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω!");
    } else {
      setLoginError("");
    }
  };

  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setPassword(e.target.value);
  };

  const handlePasswordBlur = () => {
    if (password.length < 6) {
      setPasswordError("–í–∞—à –ø–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π!");
    } else {
      setPasswordError("");
    }
  };

  const isFormValid = login && password && role && !loginError && !passwordError;

  return (
    <div className={styles.authorizationContainer}>
      <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê—á–∏–≤–µ—Ä!</h1>
      <img className={styles.welcomeImg} src={WelcomeImg}/>
      <div>
        <label>–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:</label>
        <input
          type="text"
          placeholder="–≠—Ç–æ –≤–∞—à –∞–¥—Ä–µ—Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–æ—á—Ç—ã"
          value={login}
          onChange={handleEmailChange}
          onBlur={handleEmailBlur}
        />
        {loginError && <span className={styles.errorMessage}>{loginError}</span>}
      </div>
      <div>
        <label>–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:</label>
        <div className={styles.passwordContainer}>
          <input
            type={showPassword ? "text" : "password"}
            placeholder="–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤"
            value={password}
            onChange={handlePasswordChange}
            onBlur={handlePasswordBlur}
          />
          <span
            className={styles.passwordToggle}
            onClick={() => setShowPassword((prev) => !prev)}
          >
            {showPassword ? "üôà" : "üëÅÔ∏è"}
          </span>
        </div>
        {passwordError && <span className={styles.errorMessage}>{passwordError}</span>}
      </div>
      <div>
        <label>–í–∞—à–∞ —Ä–æ–ª—å:</label>
        <div>
        <label className={styles.labelRole} htmlFor="admin">–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</label>
          <input
            type="radio"
            id="admin"
            name="role"
            value="admin"
            checked={role === "admin"}
            onChange={() => setRole("admin")}
          />
          
        </div>
        <div>
        <label className={styles.labelRole} htmlFor="worker">–†–∞–±–æ—Ç–Ω–∏–∫</label>
          <input
            type="radio"
            id="worker"
            name="role"
            value="worker"
            checked={role === "worker"}
            onChange={() => setRole("worker")}
          />
          
        </div>
      </div>
      <div>
        <button
          onClick={handleLogin}
          disabled={!isFormValid}
          className={isFormValid ? "" : "disabled"}
        >
          –í–æ–π—Ç–∏
        </button>
        <button onClick={handleReset}>–û—Ç–º–µ–Ω–∞</button>
      </div>
    </div>
  );
};

export default Login;
